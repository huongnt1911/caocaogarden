@implements IDisposable
@inject IShoppingCartStateStore shoppingCartStateStore



<div>
    <MudIcon Icon="@Icons.Material.Filled.ShoppingCart">
        Cart:&nbsp; @lineItemCount
    </MudIcon>
</div>
@code {
    private int lineItemCount = 0;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            shoppingCartStateStore.AddStateChangeListeners(HandleShoppingCartStateChange);
            lineItemCount = await shoppingCartStateStore.GetItemsCount();
            StateHasChanged();
        }
    }

    private async void HandleShoppingCartStateChange()
    {
        lineItemCount = await shoppingCartStateStore.GetItemsCount();
        StateHasChanged();
    }

    public void Dispose()
    {
        shoppingCartStateStore.RemoveStateChangeListeners(HandleShoppingCartStateChange);
    }
}
